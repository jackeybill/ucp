AWSTemplateFormatVersion: 2010-09-09
Description: >

  CI/CD Pipeline for Serverless Apps that use SAM 

Parameters:
  AppIdentity:
    Type: String
    Description: unique word to identity this application
    Default: ucp
  SourceCodeProvider:
    Type: String
    Description: Location of your source code repository
    Default: GitHub
    AllowedValues:
      - GitHub
      - CodeCommit
  GithubRepo:
    Description: Gitub Repository name
    Type: AWS::SSM::Parameter::Value<String>
    Default: /services/github/repo
  GithubToken:
    Description: Github OAuth Token with full permissions on admin:repo_hook and repo
    Type: AWS::SSM::Parameter::Value<String>
    NoEcho: true
    Default: /services/github/token
  GithubUser:
    Description: Github user where the repository lives
    Type: AWS::SSM::Parameter::Value<String>
    Default: /services/github/user
  BranchName:
    Description: Repo Branch Name
    Type: String
    Default: pipeline-demo
  Stage:
    Type: String
    Default: dev
  BetaFleet:
    Description: Fleet Configured in CodeDeploy
    Type: String
    Default: DemoFleet
  CloudFormationStateBucket:
    Type: String
    Description: Bucket to store CF State info 
    Default: aws-sam-cli-managed-default-samclisourcebucket-lepoic0s00k5

# --------------        Source   -------------------- #

Conditions:
  UseCodeCommit:
    !Equals [!Ref SourceCodeProvider, 'CodeCommit']
  UseGitHub:
    !Equals [!Ref SourceCodeProvider, 'GitHub']


Resources:
## --------------        Source   -------------------- ##
  #codecommit 
  MyRepo:
    Condition: UseCodeCommit
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Join ['-', [!Ref Stage, !Ref Stage, 'repo']]
      RepositoryDescription: !Sub '${AppIdentity} repository'
      # Triggers:
      # - Name: MyTrigger
      #   CustomData: Project ID 12345
      #   DestinationArn:
      #     Ref: SNSarn
      #   Branches:
      #   - development
      #   Events:
      #   - all
## --------------        Bucket   -------------------- ##
  WebBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html

  #S3 Bucket for aretifact
  CodePipelineArtifactStoreBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 30
            Status: Enabled
      Tags: 
        - 
          Key: "Stack"
          Value: !Ref AWS::StackName
        -
          Key: "Project"
          Value: !Ref AppIdentity

## --------------   CodeBuild -------------------- ## 
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
        Name: !Sub 'CodeBuild-${AppIdentity}'
        Description: !Sub 'Build project for the ${AppIdentity}'
        Artifacts:
          Type: CODEPIPELINE
        Environment: 
            Type: LINUX_CONTAINER
            ComputeType: BUILD_GENERAL1_SMALL
            Image: aws/codebuild/amazonlinux2-x86_64-standard:2.0
            EnvironmentVariables:
              - 
                Name: BUILD_OUTPUT_BUCKET
                Value: !Ref CodePipelineArtifactStoreBucket
              - 
                Name: WEB_BUCKET
                Value: !Ref WebBucket  
              - 
                Name: STATE_BUCKET
                Value: !Ref CloudFormationStateBucket
        Cache:
          Type: S3
          Location: !Sub ${CodePipelineArtifactStoreBucket}/ -cache
        ServiceRole: !GetAtt CodeBuildServiceRole.Arn
        Source: 
            Type: CODEPIPELINE
        Tags: 
          - 
            Key: "Stack"
            Value: !Ref AWS::StackName
          -
            Key: "Project"
            Value: !Ref AppIdentity

## --------------   Pipeline    -------------------- ##        
  AppPipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref CodePipelineArtifactStoreBucket
      RoleArn: !GetAtt 
        - CodePipelineServiceRole
        - Arn
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: "1"
              OutputArtifacts:
                - Name: SourceCodeAsZip
              Configuration:
                Owner: !Ref GithubUser
                Repo: !Ref GithubRepo
                Branch: !Ref BranchName
                OAuthToken: !Ref GithubToken
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceCodeAsZip
              OutputArtifacts:
                - Name: BuildArtifactAsZip
        - Name: Deploy
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: BuildArtifactAsZip
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                # Pass parameter values to Fargate-Cluster.yml for deployment
                ParameterOverrides: !Sub |
                  {
                    "Stage":  "${Stage}"
                  }
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                StackName: !Join ['-', [!Ref Stage, !Ref Stage, 'Stack']]
                TemplatePath: BuildArtifactAsZip::serverless/packaged-template.yaml.yaml
              RunOrder: 1

## --------------   CloudWatch    -------------------- ##     
#CloudWatch Rule
  # AmazonCloudWatchEventRule:
  #   Type: 'AWS::Events::Rule'
  #   Properties:
  #     EventPattern:
  #       source:
  #         - aws.codecommit
  #       detail-type:
  #         - CodeCommit Repository State Change
  #       resources:
  #         - !Join 
  #           - ''
  #           - - 'arn:aws:codecommit:'
  #             - !Ref 'AWS::Region'
  #             - ':'
  #             - !Ref 'AWS::AccountId'
  #             - ':'
  #             - !Ref MyRepoName
  #       detail:
  #         event:
  #           - referenceCreated
  #           - referenceUpdated
  #         referenceType:
  #           - branch
  #         referenceName:
  #           - master
  #     Targets:
  #       - Arn: !Join 
  #           - ''
  #           - - 'arn:aws:codepipeline:'
  #             - !Ref 'AWS::Region'
  #             - ':'
  #             - !Ref 'AWS::AccountId'
  #             - ':'
  #             - !Ref AppPipeline
  #         RoleArn: !GetAtt 
  #           - AmazonCloudWatchEventRole
  #           - Arn
  #         Id: codepipeline-AppPipeline
          
## --------------   IAM    -------------------- ##         
#S3 Bucket Policy
  CodePipelineArtifactStoreBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref CodePipelineArtifactStoreBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: DenyUnEncryptedObjectUploads
            Effect: Deny
            Principal: '*'
            Action: 's3:PutObject'
            Resource: !Join 
              - ''
              - - !GetAtt 
                  - CodePipelineArtifactStoreBucket
                  - Arn
                - /*
            Condition:
              StringNotEquals:
                's3:x-amz-server-side-encryption': 'aws:kms'
          - Sid: DenyInsecureConnections
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource: !Join 
              - ''
              - - !GetAtt 
                  - CodePipelineArtifactStoreBucket
                  - Arn
                - /*
            Condition:
              Bool:
                'aws:SecureTransport': false

#CloudWatch Role                
  AmazonCloudWatchEventRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: cwe-pipeline-execution
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'codepipeline:StartPipelineExecution'
                Resource: !Join 
                  - ''
                  - - 'arn:aws:codepipeline:'
                    - !Ref 'AWS::Region'
                    - ':'
                    - !Ref 'AWS::AccountId'
                    - ':'
                    - !Ref AppPipeline
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Action: 
                - 'sts:AssumeRole'
              Effect: Allow
              Principal:
                Service:
                  - codebuild.amazonaws.com
        Path: /
        Policies:
          - PolicyName: CodeBuildLogs
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - 
                  Effect: Allow
                  Action:
                    - 'logs:CreateLogGroup'
                    - 'logs:CreateLogStream'
                    - 'logs:PutLogEvents'
                  Resource: '*'
          - PolicyName: CodeBuildArtifactsBucket
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - 
                  Effect: Allow
                  Action: 
                    - 's3:GetObject'
                    - 's3:GetObjectVersion'
                    - 's3:PutObject'
                    - 's3:DeleteObject'
                  Resource:
                    - !Sub 'arn:aws:s3:::${CodePipelineArtifactStoreBucket}/*'
                    - !Sub 'arn:aws:s3:::${CloudFormationStateBucket}/*'
                    - !Sub 'arn:aws:s3:::${WebBucket}/*'
          - PolicyName: CodeBuildParameterStore
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                -
                  Effect: Allow
                  Action: 'ssm:GetParameters'
                  Resource: '*'
  CloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Action: 'sts:AssumeRole'
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess'

#Pipeline Role
  CodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: AWS-CodePipeline-Service-3
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'codecommit:CancelUploadArchive'
                  - 'codecommit:GetBranch'
                  - 'codecommit:GetCommit'
                  - 'codecommit:GetUploadArchiveStatus'
                  - 'codecommit:UploadArchive'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:GetApplicationRevision'
                  - 'codedeploy:GetDeployment'
                  - 'codedeploy:GetDeploymentConfig'
                  - 'codedeploy:RegisterApplicationRevision'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'lambda:InvokeFunction'
                  - 'lambda:ListFunctions'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'elasticbeanstalk:*'
                  - 'logs:*'
                  - 'ec2:*'
                  - 'elasticloadbalancing:*'
                  - 'autoscaling:*'
                  - 'cloudwatch:*'
                  - 's3:*'
                  - 'sns:*'
                  - 'cloudformation:*'
                  - 'rds:*'
                  - 'sqs:*'
                  - 'ecs:*'
                Resource: '*'